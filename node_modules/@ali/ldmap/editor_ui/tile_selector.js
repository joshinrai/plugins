var $ = require('jquery');
var L = require('leaflet');
var Utils = require('./../core/utils');
var Events = require('bcore/event');
require('keyanim');
require('./tile_selector.css');
function TileSelector(container, options){
  options = this.options = Utils.deepMerge(TileSelector.options, options);
  this.initialize(container, options);
}
TileSelector.options = {
  style:{
    left: '10%',
    top: '20%'
  }
};
TileSelector = Events.extend(TileSelector, {
  initialize: function(container, options){
    this.container = container;
    this.initDom();
  },
  initDom: function(){
    var options = this.options;
    var container = this.container;
    var button = $(
      '<div class="tile-selector">瓦片层\
         <div class="tile-selector-sub-wrapper">\
            <div class="tile-selector-sub-panel">\
              <div class=main></div>\
              <div class=detail></div>\
            </div>\
         <div>\
       <div>\
      ')
    .css(options.style)
    .appendTo(container);
    this.subPanelNode = button.find('.tile-selector-sub-panel');
  },
  render: function(tilelayer){
    if(tilelayer) this.data(tilelayer);
    var subPanelNode = this.subPanelNode;
    var detailPanel = subPanelNode.find('.detail');
    ds = this._data;
    var d;
    for(var i in ds){
      d = ds[i];
      var gridNode = this.renderGrid(d);
      this.initEventsGrid(gridNode);
    }
  },
  renderGrid: function(d){
    var mainPanel = this.subPanelNode.find('.main');
    var grid = $('<div class="grid">'+d.options.name+ 
        '</div>').appendTo(mainPanel);
    return grid;
  },
  initEventsGrid: function(grid){
    var self = this;
    grid.on('click', function(){
      self.curGird && self.curGird.removeClass('grid-selected');
      self.curGird = grid.addClass('grid-selected');
    });
  },
  initDomGrid: function(){
    var html = '';
  },
  data: function(tilelayer){
    this.tilelayer = tilelayer;
    this._data = tilelayer.tData;
  }
})
module.exports = TileSelector;