'use strict';

/**
 * generateSprite 生成渐变的圆点sprite贴图
 * @param  {String} colorOut 圆点外部的颜色（最好透明度为0）
 * @param  {String} colorIn  圆点内部的颜色
 * @param  {Float} size      圆点的直径
 * @return {Object}          canvas对象
 */
function generateSprite (colorOut, colorIn, size) {
    colorOut = colorOut ||  'rgba(0,55,55,0)';
    colorIn = colorIn || 'rgba(255,255,255,0.5)';
    size = size || 25;

    var canvas = document.createElement('canvas'),
      ctx = canvas.getContext('2d'),
      gradient;

    canvas.width = size;
    canvas.height = size;

    gradient = ctx.createRadialGradient(
      canvas.width / 2, canvas.height / 2, 0,
      canvas.width / 2, canvas.height / 2, canvas.width / 2
    );

    gradient.addColorStop(1.0, colorOut);
    gradient.addColorStop(0.2, colorIn);
    gradient.addColorStop(0.0, colorIn);

    ctx.fillStyle = gradient;
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    return canvas;
  }

/**
 * generateCircle 生成填充的圆点sprite贴图
 * @param  {String} color 填充色
 * @param  {String} size  圆点的直径
 * @return {Object}       canvas圆点
 */
function generateCircle(color, size) {
   size = size || 25;
   var canvas = document.createElement('canvas');
   canvas.width = size;
   canvas.height = size;
   var ctx = canvas.getContext('2d');
   ctx.fillStyle = color || 'rgba(200,0,0,0.4)';
   ctx.arc(size / 2, size / 2, size / 2 - 1, 0, 2 * Math.PI);// 减1是为了不让边缘截断
   ctx.fill();
   return canvas;
 }
 
/**
 * generateIcon 绘制一个canvas图标 并产生base64的url
 * @param  {Object} opt 配置
 * @return {String}   base64的url
 */
function generateIcon(opt) { 
  opt = opt || {};

  var canvas = document.createElement('canvas');
  var w = canvas.width = opt.width || 40;
  var h = canvas.height = opt.height || 40;

  var ctx = canvas.getContext('2d');
  ctx.fillStyle = 'rgba(250,230,50,.7)';
  ctx.translate(w / 2, h / 2);
  ctx.rotate(Math.PI / 4);
  ctx.arc(0, 0, w / 6 * 0.5, 0, Math.PI * 2);
  ctx.fill();
  ctx.fillStyle = 'rgba(250,250,50,.2)';
  ctx.arc(0, 0, w / 3 * 0.9, 0, Math.PI * 2);
  ctx.fill();

  return canvas.toDataURL();
}

/**
 * createIconCss 绘制一个canvas图标后，作为背景贴图，生成响应的css
 * @param  {Object} opt 配置
 * @return {none}  没有
 */
var sheets = document.styleSheets[0];
function createIconCss(opt) {//
  if (!opt || !opt.className) return;
  var className = opt.className;
  sheets.addRule('.' + className, 'background-image:url(' + generateIcon(opt) + ');width:40px;height:40px;background-size:100% 100%;border-radius:20px;border:1px solid rgba(45,45,45,1);'); //border-radius:40px;
}

module.exports = {
  'createIconCss': createIconCss,
  'generateIcon': generateIcon,
  'generateCircle': generateCircle,
  'generateSprite': generateSprite,
};
