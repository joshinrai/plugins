var THREE = require('three');
var Utils = require('@ali/map-utils');
var $ = require('jquery');
var requestAnimationFrame = Utils.requestAnimationFrame;
var cancelAnimationFrame = Utils.cancelAnimationFrame;
//生成一个贴图的星空
function Solar(obj) {
  obj = obj || {};
  this.setLight();
  this.isSolar = obj.isSolar;
  this.ambientColor = obj.ambientColor || 0x222222;
  this.init(obj);
  this.loop();
}

var three3D;
Solar.prototype.init = function (obj) {
  this.lightMax = 2;

  var self = this;
  three3D = this.three3D = obj.three3D;
  this.R = obj.R || 8;
  this.phi = obj.phi || 1.95;

  //太阳光
  var dirLight = this.dirLight = new THREE.DirectionalLight(0xFFFFFF, 2.0);
  three3D.add(dirLight);

  //加入环境光
  var ambient = this.ambient = new THREE.AmbientLight(this.ambientColor, 0.05);
  three3D.add(ambient);

  this.updateXYZ();
  if(this.isSolar) {this.initSolar();}
};


function lensFlareUpdateCallback(object) {
  var f, fl = this.lensFlares.length;
  var flare;
  var vecX = -this.positionScreen.x * 2;
  var vecY = -this.positionScreen.y * 2;
  var size = object.size ? object.size : 5;

  var camera = three3D.getCamera();
  var camDistance = camera.position.length();

  for (f = 0; f < fl; f++) {
    flare = this.lensFlares[f];

    flare.x = this.positionScreen.x + vecX * flare.distance;
    flare.y = this.positionScreen.y + vecY * flare.distance;

    flare.scale = size / camDistance;
    flare.rotation = 0;
  }
}

Solar.prototype.initSolar = function (obj) {
  var h = 0.55, s =0.9, l =0.5;
  var textureFlare0 = THREE.ImageUtils.loadTexture('./../mapping/sun/lensflare0.png');
  var textureFlare2 = THREE.ImageUtils.loadTexture('./../mapping/sun/lensflare2.png');
  var textureFlare3 = THREE.ImageUtils.loadTexture('./../mapping/sun/lensflare3.png');
  var flareColor = new THREE.Color(0xffffff);
  flareColor.setHSL(h, s, l + 0.5);

  var lensFlare = this.lensFlare = new THREE.LensFlare(textureFlare0, 700, 0.0, THREE.AdditiveBlending, flareColor);

  lensFlare.add(textureFlare2, 512, 0.0, THREE.AdditiveBlending);
  lensFlare.add(textureFlare2, 512, 0.0, THREE.AdditiveBlending);
  lensFlare.add(textureFlare2, 512, 0.0, THREE.AdditiveBlending);

  lensFlare.add(textureFlare3, 60, 0.6, THREE.AdditiveBlending);
  lensFlare.add(textureFlare3, 70, 0.7, THREE.AdditiveBlending);
  lensFlare.add(textureFlare3, 120, 0.9, THREE.AdditiveBlending);
  lensFlare.add(textureFlare3, 70, 1.0, THREE.AdditiveBlending);

  lensFlare.customUpdateCallback = lensFlareUpdateCallback;
  lensFlare.position.set(this.x, this.y, this.z);

  this.three3D.add(lensFlare);
};


Solar.prototype.genMaterial = function (matType) {
  var matOpt = {
    'side': THREE.BackSide,
    'color': 0Xff0000
  };
  return new THREE.MeshBasicMaterial(matOpt);
};

Solar.prototype.updateXYZ = function () {
  var R = this.R;
  var phi = this.phi;
  this.x = R * Math.cos(phi);
  this.y = R * Math.sin(-8 / 180 * Math.PI);
  this.z = R * Math.sin(phi);
};

Solar.prototype.updateSolarPos = function () {//更新太阳的位置
  this.dirLight.position.set(this.x, this.y, this.z);
  if (this.lensFlare) {
    this.lensFlare.position.set(this.x, this.y, this.z);
  }
};

Solar.prototype.setLight = function (value) {//改变太阳（光源）的亮度
  value = value || 2;
  if (!this.dirLight) {
    return console.log('没有光源');
  }
  this.dirLight.intensity = value; //可以这么改
};

Solar.prototype.setSolar = function (value) {//改变太阳的外观
  value = value || 2;
  var opacity = value / this.lightMax;
  var lensFlares = this.lensFlare.lensFlares;
  for (var k in lensFlares) {
    var len = lensFlares[k];
    len.opacity = opacity;
  }
};

Solar.prototype.update = function () {
  this.phi += 0.001;
  this.updateXYZ();
  this.updateSolarPos();
};

Solar.prototype.loop = function () {
  this.update();
  requestAnimationFrame(this.update.bind(this));
};
module.exports = Solar;