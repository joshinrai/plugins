/**
 * 可视化相关的常用函数
 */
'use strict';
var Geom = require('./geom');
var Grid = require('./grid');
var Sprite = require('./sprite');
var Color = require('./color');
var Animation = require('./animation');
var Data = require('./data');
var Mathes = require('./math');

/**
 * extend 继承的方法
 * @param  {Objects}  需要扩展的对象 长度>=1 
 * @return {Objects}  扩展完成的对象
 */
function merge(dest) { 
  var sources = Array.prototype.slice.call(arguments, 1), i, j, len, src;

  for (j = 0, len = sources.length; j < len; j++) {
    src = sources[j] || {};
    for (i in src) {
      if (src.hasOwnProperty(i)) {
        dest[i] = src[i];
      }
    }
  }
  return dest;
}

/**
 * deepMerge 深度继承
 * @param  {Objects}  需要扩展的对象 长度>=1
 * @return {Objects}  扩展完成的对象
 */
function deepMerge(dest) {
  var sources = Array.prototype.slice.call(arguments, 1), i, j, len, src;
  
  for (j = 0, len = sources.length; j < len; j++) {
    src = sources[j] || {};
    for (i in src) {
      if (src.hasOwnProperty(i)) {
        var value = src[i];
          dest[i] = value;
          if(dest[i] && typeof(value) === 'object') {
            dest[i] = deepMerge(dest[i], value);
          }
          dest[i] = src[i];
        }
      }
    }
  return dest;
}

module.exports = merge(Grid, Sprite, Color, Animation, Data, Geom, Mathes, {extend: merge, merge: merge, deepMerge: deepMerge});
