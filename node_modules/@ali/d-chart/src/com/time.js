var _ = require('../util');
var Com = require('./index');
var d3 = require('../libs/d3');
var Axis = require('./axis');
/**
 * è½´
 * @constructor
 */
function Time(options) {
  this.$options = {
    el : ''
  };
  this.valid = true;
  this.msg = 'undefined';
  this._init(options);
  this.el = d3.select(this.$options.timeEl)
    .attr('class', 'timeline');
  this.axis;
  this._valid();
}

Com.extend(Time, {
  _valid : function () {},
  render : function () {
    var opt = this.$options;
    var data = this._data;
    var self = this;
    if (!this.valid) {
      this.emit('error', {msg: this.msg});
    }

    var el = this.el;
    var svg = el.append('svg')
      .attr({
        width : opt.width,
        height : 66
      }).append('g')
      .attr("transform", "translate(" + 40 + "," + 20 + ")");
    var timeAxis = this.axis = new Axis({
      _data : opt._data,
      type : 'time',
      key : 'time',
      orient : 'bottom',
      format : opt.format,
      svg : svg,
      width : opt.width - 80,
      height : 10
    });
    timeAxis.render();

    var timeX = timeAxis.getX();
    var brush = d3.svg.brush()
      .x(timeX)
      .on("brush", function () {
        self.emit('time.brush', brush);
      });

    svg.append("g")
      .attr("class", "x brush")
      .call(brush)
      .selectAll("rect")
      .attr("y", -6)
      .attr("height", 10 + 7);
  },
  getX : function () {
    return this.axis.getX();
  }
});

module.exports = Time;