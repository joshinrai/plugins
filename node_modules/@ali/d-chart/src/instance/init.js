var exports = module.exports;
var _ = require('../util');
var d3 = require('../libs/d3');

var Com = require('../api/com');

exports._init = function (options) {
  this.$el = null;
  this.$innerWidth = null;
  this.$innerHeight = null;
  this._data = null;
  this._com = new Com();
  this.$options = {
    el : '',
    margin : {top:20, right:40, bottom:20, left:40},
    width  : 0,
    height : 0,
    padding : 8,
    x : 'x',
    y : 'y'
  };

  options = options || {};
  _.extend(this.$options, options);

  this._initArgu();
  this._initEvent();
};

exports._initBeforeLayout = function (arg) {
  var opt = this.$options;
  var margin = {left:0, top:0, right:0, bottom:0};
  for (var obj in arg) {
    var item = arg[obj];
    if (_.has(item, 'position') && item.position !== 'center') {
      switch (item.position) {
      case 'bottom' :
      case 'top' :
        opt.height -= (item.height.indexOf('%') === -1 ? parseInt(item.height) : parseInt(item.height) * opt.height / 100);
        margin[item.position] += opt.height;
        break;
      case 'left' :
      case 'right' :
        opt.width -= (item.width.indexOf('%') === -1 ? parseInt(item.width) : parseInt(item.width) * opt.width / 100);
        margin[item.position] += opt.width;
        break;
      }
    }
  }
  arg.series = {
    margin : margin.top + 'px ' + margin.right + 'px ' + margin.bottom + 'px ' + margin.left + 'px'
  };
};

exports._initArgu = function () {
  var opt = this.$options;
  this.$el = d3.select(opt.el);
    //.classed('chart', true);
  if (!opt.width) {
    opt.width = parseInt(this.$el.style('width'));
  }
  if (!opt.height) {
    opt.height = parseInt(this.$el.style('height'));
  }
  if (opt.beforeLayout) {
    this._initBeforeLayout(opt.beforeLayout);
  }
  this.$svgWidth = opt.width;
  this.$svgHeight = opt.height;
  this.$innerWidth = opt.width = this.$svgWidth - opt.margin.left - opt.margin.right;
  this.$innerHeight = opt.height = this.$svgHeight - opt.margin.top - opt.margin.bottom;
  this._data = opt.data || {};
};

exports._initLayout = function () {
  var opt = this.$options;
  this.svg = this.$el.append('svg')
    .attr({
      'class' : 'svg series',
      'width' : this.$svgWidth,
      'height' : this.$svgHeight
    }).append('g')
    .attr({
      "class" : "g-container",
      "transform": "translate(" + opt.margin.left + "," + opt.margin.top + ")"
    })
    .append('g')
    .attr('class', 'series');
};