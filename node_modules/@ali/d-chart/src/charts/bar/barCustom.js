require('./bar.css');
var DataV = require('../../dataV');
var d3 = require('../../libs/d3');
var _ = require('../../util');

function BarCustom(options) {
  this._init(options);
  this._initLayout();
}

DataV.extend(BarCustom, {
  render : function () {
    this.svg.classed('bar-chart-g', true);
    this._beforeRender();
    var self = this;
    var opt = this.$options;
    //画轴
    var xAxis, yAxis;
    var xOpt = _.extend({
      orient : 'bottom',
      key : opt.x
    }, (opt.xaxis || {}));
    var yOpt = _.extend({
      orient : 'left',
      key : opt.y
    }, (opt.yaxis || {}));

    xAxis = this.renderAxis(xOpt);
    yAxis = this.renderAxis(yOpt);

    //真正画数据的部分
    var x = xAxis.getX();
    var y = yAxis.getX();

    this.svg.selectAll('.bar')
      .data(this._data)
      .enter()
      .append('polygon')
      .attr({
        "class" : "bar",
        "points" : function (d) {
          var pos = [
            {x: x(d.x), y: y(yAxis.getMin())},
            {x: x(d.x), y: y(d.y)},
            {x: x(d.x) + x.rangeBand(), y: y(d.y)},
            {x: x(d.x) + x.rangeBand(), y: y(yAxis.getMin())}
          ];
          if (typeof opt.customPos === 'function') {
            pos = opt.customPos(pos);
          }
          return _.pos2Str(pos);
        }
      });

    this._afterRender();
  }
});

module.exports = BarCustom;