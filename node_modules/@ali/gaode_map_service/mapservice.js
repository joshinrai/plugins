'use strict'

// author: kechun.wkc<kechun.wkc@alibaba-inc.com>

var buffer = require('buffer')
var debug = require('debug')('gaode_map_service')
var fs = require('fs')
var path = require('path')
var util = require('util')

module.exports = serveGaoDeMapService

function serveGaoDeMapService(map_data_path) {
  if (!map_data_path) {
    throw new TypeError('map_data_path path required')
  }

  if (typeof map_data_path !== 'string') {
    throw new TypeError('map_data_path path must be a string')
  }

  return function(req, res, next) {
    var query = req.query
    debug('query', query)
      // query = { t: '0', c: '4', x: '3437', y: '1687', z: '12', v: 'blue' }
    query = {
      t: +query.t,
      c: +query.c,
      x: +query.x,
      y: +query.y,
      z: +query.z,
      v: query.v
    }

    var etag = query.t + '.' + query.c + '.' + query.x + '.' + query.y + '.' + query.z + '.' + query.v;

    var kGridSize = 128
    var kBaseIdxFileSize = 128 * 128
    var kMaxDirSize = 10

    var headers = req.headers;

    var clientTag = headers['if-none-match'];

    if (clientTag === etag) {
       res.statusCode = 304;
       return res.end('');
    }

    if ({
        blue: true,
        dark: true,
        light: true
      }[query.v]) {

      var path_1 = query.v
      var path_2 = {
        '1': 'poi',
        '2': 'roadlabel',
        '4': 'road',
        '8': 'region',
        '16': 'poi'
      }[query.c] || 'region'

      var gx = Math.floor(query.x / kGridSize)
      var gy = Math.floor(query.y / kGridSize)
      var dx = Math.floor(gx / kMaxDirSize)
      var dy = Math.floor(gy / kMaxDirSize)

      var file_path = path.join(map_data_path, path_1, path_2, query.z + '', dx + '', dy + '')
      var dat_filename = util.format('%d_%d_%d.dat', query.z, gx, gy)
      var idx_filename = util.format('%d_%d_%d.idx', query.z, gx, gy)

      debug('path', file_path, idx_filename, dat_filename)

      var idx_index = (query.x % kGridSize) * kGridSize + (query.y % kGridSize)
      debug('idx_index', idx_index)

      fs.readFile(path.join(file_path, idx_filename), function(err, data) {
        if (err) return next(err)
        debug('data_length', data.length)
        if (data.length === 128 * 128 * 4) {
          idx_index *= 4
          var dat_offset = data.readInt32BE(idx_index)
          debug('dat_offset', dat_offset)

          if (dat_offset < 0) {
            var filename = {
              '-1': 'land',
              '-100': 'land',
              '-2': 'water',
              '-3': 'grass',
              '-404': '404'
            }['' + dat_offset] || '404'
            if (filename == '404') return res.sendFile(path.join(__dirname, '404.png'))
            return res.sendFile(path.join(map_data_path, path_1, path_2, filename + '.png'))
          }
          fs.open(path.join(file_path, dat_filename), 'r', function(err, fd) {
            if (err) return next(err)
            var buf = new Buffer(30)
            fs.read(fd, buf, 0, 4, dat_offset, function(err, bytesRead, buffer) {
              var close = function() {
                fs.close(fd, function(err) {})
              }
              if (err || bytesRead != 4) return close(), next(err || new Error('file read error'))
              var img_size = buf.readInt32BE(0)
              debug('img_size', img_size)
              var img = new Buffer(img_size)
              fs.read(fd, img, 0, img_size, dat_offset + 4, function(err, bytesRead, buffer) {
                if (err || bytesRead != img_size) return close(), next(err || new Error('file read error'))
                res.writeHead(200, {
                  'Content-Type': 'image/png',
                  'Content-Length': img_size,
                  'etag': etag
                })
                return close(), res.end(img)
              })
            })
          })
        } else {
          // todo
          return next(new Error('待支持第二种idx格式'))
        }
      })
    } else {
      return next(new Error('不支持没有v参数,参数示例 http://localhost:3000/mapservice?t=0&c=4&x=3437&y=1687&z=12&v=blue'))
    }
  }
}
