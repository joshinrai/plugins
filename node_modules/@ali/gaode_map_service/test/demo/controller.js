'use strict';
var $ = require('jquery');
require('./lib/anim/anim');
require('./../index');
var Demo2d = require('./demo');
var Areas2d = require('./areas_demo');
var Scatter = require('./scatter_canvas_demo');
var FlyingLine2dSvg =  require('./flyingLineSvgGradient_demo');
var FlyingLine2dSvgGradient = require('./flyingLineSvgGradient_demo');
var Markers2D = require('./markers_demo');
var demoList = [
{
  'name': '2d可交互飞线',
  'Constructor': FlyingLine2dSvg,
  'type': '2d'
}, {
  'name': '2d标注（iconfont）',
  'Constructor': Markers2D,
  'type': '2d'
}, {
  'name': '图层展示',
  'Constructor': Demo2d,
  'type': '2d'
}, {
  'name': '可缩放区域热力图',
  'Constructor': Areas2d,
  'type': '2d'
}, {
  'name': '点图',
  'Constructor': Scatter,
  'type': '2d'
}];

function Contorller() {
  this.container = $('.wrapper');
  this.mapContainer = $('#map-container');
  this.init();
  this.select(0);
  this.events();
  this.canvasContainer = $('#canvas-container');
}

Contorller.prototype.init = function(){
  var html = '';
  for (var k in demoList) {
    var obj = demoList[k];
    var bgColor = (obj.type === '3d')?'#066':'#055';
    html += '<div class="grid" id="'+k+'" style="background:'+bgColor+';">'+obj.name+'</div>';
  }
  $('#demo-container').html(html);
};

Contorller.prototype.select = function (index) {
  var obj = demoList[index];
  new obj.Constructor(this.mapContainer);
  this.container.find('.title').text(obj.name);
};

Contorller.prototype.close = function() {
  var container = this.container;
  container
    .css('pointerEvents','none')
    .keyAnim('fadeOut', {
      time: 0.5,
      cb: function() {
        container.find('.container').remove();
      }
    });
};

Contorller.prototype.events = function() {
  var self = this;
  $('.close').on('click', this.close.bind(this));
  $('#demo-container').delegate('div', 'click', function() {
    var id = $(this).attr('id');
    if (id) {
      self.container
      .css('pointerEvents','auto')
      .keyAnim('fadeIn', {
        time: 0.4,
        cb: function() {
          self.select(id);
        }
      });
      self.mapContainer = $('<div class="container" style="z-index:1;"></div>')
      .attr('id', 'id'+parseInt(1000*Math.random()))
      .appendTo(self.container);
      self.canvasContainer = $('<div id="canvas-container" class="container" style="pointer-events:none; z-index:2;"></div>')
      .appendTo(self.container);
    }
  });
};

module.exports = Contorller;