'use strict';

var $ = require('jquery');
var _ = require('lodash');

var L = require('leaflet');
require('./../layer/flyingLineGradient');
var flyingLineGradient = L.dmap.flyingLineGradient;

var TimeLayer = require('./../data_layer/time_layer');
var fromList = require('./data/result');

function Demo(container) {
  container = container || $('#map-container');
  this.container = container;
  this.initMap();
  this.initVisual();
  this.list = {};
  this.loop();
}

Demo.prototype.initVisual = function() {
  var map = this.map;
  this.timeLayer = new TimeLayer({
    'lifeSpeed': 30000,
    visualize: function () {
      var fLine = flyingLineGradient({
        'range': 0.8,
        'colorNormal': 'rgba(255,0,0,0.1)',
        'interactiveLine': {
          'weight': 20
        },
        'lifeEnd': 'hide',
        'isPopupHover': 1,
        'map': map
      });
      fLine.bindPopup(function (d) { return '<div>'+ d.from.name + '->'+ d.to.name + '</div>'});
      return fLine;
    }
  });
};

Demo.prototype.initMap = function() {
  var map = this.map = L.map(this.container.attr('id'), {
    'center': L.latLng(39.90973623, 116.34521484),
    'zoom': 10,
    'attributionControl': false,
    'crs': L.CRS.EPSG4326
  });
  var tileLayer = L.tileLayer('http://t.mapabc.com/maptile?t=3&x={x}&y={y}&z={z}').addTo(map);
};

function randomPick(list) { //随机选择数据
  if (typeof(list) === 'object') {
    list = _.values(list);
  }
  return list[Math.floor(Math.random() * list.length)];
}

Demo.prototype.mock = function() {
  return {
    from: {
      'lng': 116.34521484 + (Math.random() - 0.5) * 1,
      'lat': 39.90973623 + (Math.random() - 0.5) * 1,
      'name': randomPick(['中国','美国','法国','德国'])
    },
    to: {
      'lng': 116.34521484 + (Math.random() - 0.5) * 1,
      'lat': 39.90973623 + (Math.random() - 0.5) * 1,
      'name': randomPick(['印度','朝鲜','斯里兰卡','马来西亚'])
    },
    'id': 'id_' + parseInt(Math.random() * 1000),
    'time': 'Wed Jun 24 2015 10:' + parseInt(Math.random() * 60) + ':' + parseInt(Math.random() * 60) + ' GMT+0800 (CST)'
  };
};

Demo.prototype.mocks = function() {
  var result = {};
  for (var k = 0; k < 3000 * Math.random(); k++) {
    var d = this.mock();
    var id = d.id;
    result[id] = d;
  }
  return result;
};

var ii = 0;
Demo.prototype.loop = function() {
  if (ii++ % 120 === 0) {
    var datas = this.mocks();
    this.timeLayer.data(datas);
  }
  window.requestAnimationFrame(this.loop.bind(this));
};

module.exports = Demo;