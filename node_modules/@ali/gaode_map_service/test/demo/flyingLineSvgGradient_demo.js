var $ = require('jquery');
var _ = require('lodash');

var L = require('leaflet');
var FlyingLineGradient = require('./../layer/flyingLineGradient');
require('./../layer/anim_marker');
var animMarker = L.dmap.animMarker;
require('./../core/utils');
var Utils = L.dmap.Utils;


var fromList = require('./data/result');

function Demo(container) {
  container = container || $('#map-container');
  this.container = container;
  this.initMap();
  this.initVisual();
  this.list = {};
  this.loop();
}

function deleteAntarctica(geojson) { //去除南极洲
  var features = geojson.features;
  for (var k in features) {
    var feature = features[k];
    if (!feature.properties || !feature.properties.name) continue;
    if (feature.properties.name === 'Antarctica') {
      features.splice(k, 1);
    }
  }
  return geojson;
}

Demo.prototype.initVisual = function() {
  var map = this.map;
};

Demo.prototype.initMap = function() {
  var map = this.map = L.map(this.container.attr('id'), {
    'center': L.latLng(-20.289492, 0.956548),
    'zoom': 2,
    'attributionControl': false,
    'crs': L.CRS.EPSG4326
  });

  $.getJSON('./data/world.json', function(geojson) {
    geojson = deleteAntarctica(geojson);
    var layer = L.geoJson(geojson).addTo(map);
    console.log(layer);
    layer.setStyle(function(d) {
      if (d.id in {
          'ALB': 1,
          ARE: 1,
          CAN: 1
        }) {
        return {
          color: '#f95',
          fillColor: '#ddd',
          weight: 1,
          dashArray: [8, 3],
          opacity: 1
        };
      }
      return {
        color: '#555',
        fillColor: '#ddd',
        weight: 1,
        dashArray: [8, 3],
        opacity: 1
      };
    });
  });
};

function randomPick(list) { //随机选择数据
  if (typeof(list) === 'object') {
    list = _.values(list);
  }
  return list[Math.floor(Math.random() * list.length)];
}

Demo.prototype.mock = function() {
  var to = randomPick(fromList).cp;
  var from = {
    lng: 116.34521484,
    lat: 39.90973623
  };
  return {
    to: from,
    from: to,
    'id': 'id_' + parseInt(Math.random() * 100000)
  };
};

Demo.prototype.onLifeEnd = function(e) {
  var map = this.map;
  var latlng = e.latlng;
  var data = e.data;
  data.latlng = latlng;
  var marker = animMarker({
    map: map,
    animClass: 'fadeInOut',
    className: 'rect',
    life: 2
  });
  var text = 'math' + parseInt(Math.random() * 1000);
  data.text = text;
  marker.data(data);
};

Demo.prototype.receive = function(d) {
  var line = new FlyingLineGradient({ //创建飞线
    'range': 0.4,
    'lifeEnd': 'destroy',
    'map': this.map,
    'interactiveLine': {
      weight: 15,
      color: 'rgba(250,150,50,0.0)',
      colorHover: 'rgba(0,150,150,0.2)'
    },
    'displayLine': {
      weight: 1,
      colorFrom: 'rgba(0,150,150,0.0)',
      colorTo: 'rgba(150,250,250,1)',
      colorNormal: 'rgba(250,50,10,0)',
    },
  });
  // line.on('lifeend',this.onLifeEnd.bind(this));
  line.data(d);
};

var loopIndex = 0;
Demo.prototype.loop = function() {
  if (Math.random()) {
    var data = this.mock();
    this.receive(data);
  }
  window.requestAnimationFrame(this.loop.bind(this));
};

module.exports = Demo;