!!! 注意本文档所述不一定准确


if params.v 存在
  params = {
    t
    c
    x
    y
    z
    v
  }
  根据v确定文件夹  blue
  x>0 y>0 z>0
  计算c = road
  map={
    1:'poi',
    2:'roadlabel',
    4:'road',
    8:'region',
    16:'poi',
    else:'region',
    } 
    
    // tile汇聚是格子大小
    static const int32_t kGridSize = 128;
    // 汇聚时分目录阈值
    static const int32_t kMaxDirSize = 10;
    static const int32_t kBaseIdxFileSize = kGridSize * kGridSize;
    enum {
      kLandPng = -1,
      kWaterPng = -2,
      kGrassPng = -3,
      kDefaultPng = -100,
      kBad404Png = -404,
    };

    文件夹 /z/dx/dy/z_gx_gy
    gx = x/kGridSize = 3437/128 = 26.8
    gy = y/kGridSize = 1687/128 = 13.1
    dx = gx/kMaxDirSize = 2
    dy = gy/kMaxDirSize = 1
    路径 grid_name = /12/2/1/12_26_13
    dat_filename = 12_26_13.dat
    idx_filename = 12_26_13.idx

    idx_index = (x%kGridSize)*kGridSize + (y%kGridSize) = 
      (3437%128)*128+(1687%128) = 13975


    // func SendTile
    打开  idx为文件. 其大小为  128*128的整数倍
    idx.length / (128*128) 4 则为 int类型 , 否则为long
    在 idx_index位置读取
    然后调用 TCSWAB32 得到  dat_offset = 10072500
    #     // Take from tokyo cabinet
    # #define TCSWAB32(TC_num) \
    #   ( \
    #     ((TC_num & 0x000000ffUL) << 24) | \
    #     ((TC_num & 0x0000ff00UL) << 8) | \
    #     ((TC_num & 0x00ff0000UL) >> 8) | \
    #     ((TC_num & 0xff000000UL) >> 24) \
    #   )

    如果 dat_offset <0 
      特殊图片
        enum {
          kLandPng = -1,
          kWaterPng = -2,
          kGrassPng = -3,
          kDefaultPng = -100,
          kBad404Png = -404,
        };
        返回特殊图片.

    否则
      打开dat文件
      在 dat_offset 得到  dat_offset
      dat_offset TCSWAB32



